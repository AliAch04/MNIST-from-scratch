<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>28x28 Drawing Grid</title>
  <style>
    body {
      display: flex;
      justify-content: center;
      align-items: center;
      height: 100vh;
      background: #f2f2f2;
    }
    .grid {
      display: grid;
      grid-template-columns: repeat(28, 20px);
      grid-template-rows: repeat(28, 20px);
      border: 2px solid black;
    }
    .cell {
      width: 20px;
      height: 20px;
      background: rgb(255,255,255);
      border: 1px solid #ddd;
      box-sizing: border-box;
      user-select: none;
    }
  </style>
</head>
<body>
  <div class="grid" id="grid"></div>

  <script>
    const grid = document.getElementById("grid");
    let isDrawing = false;
    let isErasing = false;

    // Function to update color based on intensity
    function updateCell(cell) {
      let intensity = parseInt(cell.dataset.intensity || "0");
      cell.style.background = `rgb(${255-intensity},${255-intensity},${255-intensity})`;
    }

    // Create cells
    for (let i = 0; i < 28 * 28; i++) {
      const cell = document.createElement("div");
      cell.classList.add("cell");
      cell.dataset.intensity = "0"; // start white

      // Left click (draw darker)
      cell.addEventListener("mousedown", (e) => {
        if (e.button === 0) { // left click
          isDrawing = true;
          let intensity = Math.min(255, parseInt(cell.dataset.intensity) + 110);
          cell.dataset.intensity = intensity;
          updateCell(cell);
        }
        if (e.button === 2) { // right click (erase)
          isErasing = true;
          cell.dataset.intensity = 0;
          updateCell(cell);
        }
        e.preventDefault();
      });

      // Hover while mouse is down
      cell.addEventListener("mouseover", (e) => {
        if (isDrawing) {
          let intensity = Math.min(255, parseInt(cell.dataset.intensity) + 150);
          cell.dataset.intensity = intensity;
          updateCell(cell);
        }
        if (isErasing) {
          cell.dataset.intensity = 0;
          updateCell(cell);
        }
      });

      grid.appendChild(cell);
    }

    // Stop when mouse is released
    document.addEventListener("mouseup", () => {
      isDrawing = false;
      isErasing = false;
    });

    // Disable context menu (right click erase works instead)
    document.addEventListener("contextmenu", (e) => e.preventDefault());
  </script>
</body>
</html>
